{"version":3,"sources":["style/style.js","components/searchInput.js","components/gallery/lightBoxGallery.js","components/gallery/gallery.js","components/gallery/galleryStyle.js","App.js","utils/utils.js","serviceWorker.js","index.js"],"names":["styles","root","padding","display","alignItems","width","margin","input","marginLeft","flex","iconButton","divider","height","searchContainer","backgroundColor","appContainer","textAlign","appHeader","minHeight","fontDize","color","position","zIndex","error","top","fontSize","debounceTimer","SearchInput","handleSearch","debounce","query","_this","props","handleInputChange","e","target","value","toLowerCase","_this$props","this","classes","inputPlaceHolder","react_default","a","createElement","className","Paper_default","elevation","InputBase_default","onChange","placeholder","Component","withStyles","LightboxGallery","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","closeGallery","setState","photoIndex","state","_this2","images","isGalleryOpen","galleryPhotoIndex","index_es","imageTitle","title","mainSrc","fullImageUrl","nextSrc","length","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","Gallery","handleScroll","event","loadMore","srcElement","body","scrollHeight","window","pageYOffset","innerHeight","openGallery","photo","index","console","log","addEventListener","removeEventListener","photos","isLoading","_this$state","galleryContainer","map","i","key","id","onClick","alt","src","thumbnailUrl","lightBoxGallery_LightboxGallery","flexWrap","justifyContent","maxWidth","maxHeight","minWidth","flexFlow","transition","cursor","&:hover","transform","App","toggleLoaderSearchTermPage","loading","searchTerm","currentPage","updateSearchHistory","searchHistory","includes","push","localStorage","imageSearchHistory","JSON","stringify","getData","noMorePhotosToFetch","searchInputPlaceHolder","photosPerPage","_this$state2","parse","arguments","undefined","page","fetch","then","response","text","data","photosArray","photoData","farm","server","secret","baseUrl","parseImageData","concat","catch","_this$state3","searchInput","gallery","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e7e0581.chunk.js","sourcesContent":["export const styles = {\n    root: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center',\n      width: 400,\n      margin: 'auto'\n    },\n    input: {\n      marginLeft: 8,\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      width: 1,\n      height: 28,\n      margin: 4,\n    },\n    searchContainer: {\n      padding: 10,\n      backgroundColor: 'gray'\n    },\n    appContainer: {\n      textAlign: 'center'\n    },\n    appHeader: {\n      backgroundColor: '#282c34',\n      minHeight: 45,\n      fontDize: 'calc(10px + 2vmin)',\n      color: 'white',\n      position: 'fixed',\n      width: '100%',\n      zIndex: 3\n    },\n    error: {\n      position: 'relative',\n      top: 125,\n      color: 'red',\n      fontSize: 40\n    }\n  };","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport Paper from '@material-ui/core/Paper';\nimport debounce from 'lodash.debounce';\nimport { styles } from '../style/style';\nconst debounceTimer=400;\nclass SearchInput extends Component {\n\n  handleSearch = debounce(query => {\n    const { handleSearch } = this.props;\n    handleSearch(query);\n  }, debounceTimer);\n\n  handleInputChange = e => {\n    let input = e.target.value.toLowerCase();\n    this.handleSearch(input);\n  };\n\n  render() {\n    const { classes, inputPlaceHolder} = this.props;\n    return (\n        <div className={classes.searchContainer}>\n          <Paper className={classes.root} elevation={1}>\n            <InputBase onChange={this.handleInputChange} className={classes.input} placeholder={inputPlaceHolder} />\n          </Paper>\n        </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SearchInput);\n","import React, { Component } from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css'; \n\nexport default class LightboxGallery extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      photoIndex: null\n    };\n  }\n\n  closeGallery = () => {\n    const { closeGallery } = this.props;\n    this.setState({\n      photoIndex: null\n    }); \n    closeGallery();\n  }\n\n  render() {\n    const { images, isGalleryOpen, galleryPhotoIndex} = this.props;\n    let {photoIndex} = this.state;\n    photoIndex = photoIndex || galleryPhotoIndex;\n    return (\n      <div>\n        {isGalleryOpen && (\n          <Lightbox\n            imageTitle={images[photoIndex].title}\n            mainSrc={images[photoIndex].fullImageUrl}\n            nextSrc={images[(photoIndex + 1) % images.length].fullImageUrl}\n            prevSrc={images[(photoIndex + images.length - 1) % images.length].fullImageUrl}\n            onCloseRequest={this.closeGallery}\n            onMovePrevRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + images.length - 1) % images.length\n              })\n            }\n            onMoveNextRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + 1) % images.length\n              })\n            }\n          />\n        )}\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport LightboxGallery from './lightBoxGallery';\nimport { withStyles } from '@material-ui/core/styles';\nimport { styles } from './galleryStyle';\n\nclass Gallery extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isGalleryOpen: false\n    };\n  }\n\n  componentDidMount () {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\ncomponentWillUnmount () {\n    window.removeEventListener('scroll', this.handleScroll);\n}\n\nhandleScroll = (event) => {\n    const { loadMore } = this.props;\n    const galleryScrollHeight = event.srcElement.body.scrollHeight;\n    const pageScrollPosition = window.pageYOffset;\n    if (galleryScrollHeight - pageScrollPosition < window.innerHeight + 250) {\n      loadMore();\n    }\n\n}\n\ncloseGallery = () =>{\n  this.setState({\n    isGalleryOpen: false,\n  })\n}\n\nopenGallery = (photo,index) => {\n  console.log(photo, index);\n  this.setState({\n    isGalleryOpen: true,\n    galleryPhotoIndex: index\n  })\n}\n\nrender() {\n  const { classes, photos, isLoading, error} = this.props;\n  const { isGalleryOpen, galleryPhotoIndex } = this.state;\n  return (\n    <div className={classes.galleryContainer}>\n      {photos.map((photo, i)=>{\n        return  <img className={classes.photo} key={photo.id} onClick={()=>{this.openGallery(photo, i)}}\n                      alt={photo.title} src={photo.thumbnailUrl}/ >\n      })}\n      {!isLoading && !error && photos.length === 0 && <div>\n        No results\n      </div>}\n      <LightboxGallery images={photos} isGalleryOpen={isGalleryOpen} galleryPhotoIndex={galleryPhotoIndex} closeGallery={this.closeGallery}/>\n    </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Gallery);\n","export const styles = {\n    galleryContainer: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        position: 'relative',\n        top: 80\n    },\n    photo: {\n        maxWidth: '30%',\n        maxHeight: 150,\n        minWidth: 100,\n        flexFlow: 'row nowrap',\n        alignItems: 'center',\n        margin: 5,\n        transition: 'all 1s',\n        cursor: 'pointer',\n        zIndex: 1,\n        '&:hover':{\n            transform: 'scale(1.2)',\n            zIndex: 2\n        }\n        \n    },\n  };","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { getData, parseImageData } from \"./utils/utils\";\nimport { styles } from './style/style';\nimport SearchInput from './components/searchInput';\nimport Gallery from './components/gallery/gallery';\nimport './style/loading.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchInputPlaceHolder: 'Search Flicker...',\n      photos: [],\n      loading: true,\n      error: false,\n      currentPage: 1,\n      searchTerm: 'animals',\n      noMorePhotosToFetch: false,\n      searchHistory: []\n    };\n    this.photosPerPage = 100;\n  }\n\n  componentDidMount() {\n    const {searchTerm, currentPage} = this.state;\n    localStorage.imageSearchHistory = localStorage.imageSearchHistory || JSON.stringify([]);\n    this.setState({\n      searchHistory: JSON.parse(localStorage.imageSearchHistory)\n    }, this.getData(searchTerm, currentPage))\n  }\n\n  toggleLoaderSearchTermPage = (loading,searchTerm, currentPage) => {\n    this.setState({\n      loading,\n      searchTerm,\n      currentPage\n    });\n  }\n\n  getData(searchTerm, currentPage=1) {\n    this.toggleLoaderSearchTermPage(true, searchTerm, currentPage);\n    getData(searchTerm, currentPage).then((data)=>{\n      if (data && data.photos && data.photos.photo) {\n        const photosArray = parseImageData(data.photos.photo);\n        let noMorePhotosToFetch = false;\n        if (photosArray.length < this.photosPerPage) {\n          noMorePhotosToFetch = true;\n        }\n        this.setState({photos: (currentPage > 1 ? this.state.photos.concat(photosArray) : photosArray), \n        loading: false, error: false, noMorePhotosToFetch});\n      }\n    }).catch((error)=>{\n      this.setState({error: true, loading: false});\n    })\n  }\n\n  updateSearchHistory = (searchTerm) => {\n    const { searchHistory } = this.state;\n    if (!searchHistory.includes(searchTerm)) {\n      searchHistory.push(searchTerm);\n      localStorage.imageSearchHistory = JSON.stringify(searchHistory);\n      this.setState({\n        searchHistory\n      });\n    }\n  }\n\n  handleSearch = (searchTerm) => {\n   if (searchTerm !== '') {\n    this.getData(searchTerm);\n    this.updateSearchHistory(searchTerm);\n   }\n  }\n\n  loadMore = () =>{\n    const { loading, error, currentPage, searchTerm, noMorePhotosToFetch} = this.state;\n    if (!loading && !error && !noMorePhotosToFetch) {\n      this.getData(searchTerm, currentPage + 1);\n    }\n  }\n\n  render() {\n    const { classes, appHeader} = this.props;\n    const { searchInputPlaceHolder, photos, loading, error} = this.state;\n    return (\n      <div className={classes.appContainer} >\n        <header className={classes.appHeader}>\n           {appHeader}\n           <SearchInput handleSearch={this.handleSearch} inputPlaceHolder={searchInputPlaceHolder} />\n        </header>\n        <Gallery photos={photos} isLoading={loading} error={error} loadMore={this.loadMore} />\n        { loading &&  \n         (<div className=\"loading\">Loading&#8230;</div>)\n        }\n        { error &&  \n         (<div className={classes.error}>Error fetching images</div>)\n        }\n      </div>\n      \n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","export function getData(searchTerm, page) {\n    const api_key = 'bac9f1ccfd854f27894fd47c4f01b1e8';\n    const promiseData = fetch('https://api.flickr.com/services/rest/?method=flickr.photos.search' +\n    '&safe_search=1&format=json&nojsoncallback=1&api_key='+ api_key +'&content_type=1&is_getty=1&text='+searchTerm +'&page=' + page)\n\t\t.then(response => response.text())\n        .then((data) => {\n            return JSON.parse(data);\n        });\n    return promiseData;\n}\n\nexport function parseImageData(data) {\n// This function will build a url from the fetched data\n// Example: https://farm{farm-id}.staticflickr.com/{server-id}/{id}_{secret}.jpg\n    return data.map((photoData)=>{\n        const {farm, server, id, secret, title} = photoData;\n        const baseUrl = 'https://farm'+farm +'.staticflickr.com/'+server+'/'+id+'_'+secret;\n        return {\n            thumbnailUrl: baseUrl + '_m.jpg',\n            fullImageUrl: baseUrl + '.jpg',\n            title,\n            id: ''+secret+id\n        };\n    })\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App appHeader={'Flicker Image Search'}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}